



PERC                                                            T. Reddy
Internet-Draft                                           R. Ravindranath
Intended status: Standards Track                                   Cisco
Expires: December 26, 2015                                 June 24, 2015


      KMS distributing keys for Privacy Ensured Cloud Conferencing
                   draft-reddy-perc-kms-cloud-conf-00

Abstract

   This document describes a key management service that will distribute
   keys to conference participants ensuring media confidentiality and
   integrity are maintained end-to-end within the context of a switched
   conferencing environment where the switching conference server is not
   entrusted with the media encryption keys.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at http://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on December 26, 2015.

Copyright Notice

   Copyright (c) 2015 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (http://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.



Reddy & Ravindranath    Expires December 26, 2015               [Page 1]

Internet-Draft         KMS for cloud conferencing              June 2015


Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   2
   2.  Notational Conventions  . . . . . . . . . . . . . . . . . . .   3
     2.1.  Definitions and Notation  . . . . . . . . . . . . . . . .   3
   3.  Design considerations . . . . . . . . . . . . . . . . . . . .   3
   4.  Overview  . . . . . . . . . . . . . . . . . . . . . . . . . .   4
   5.  Full EKT Field format . . . . . . . . . . . . . . . . . . . .   7
   6.  KMS Protocol  . . . . . . . . . . . . . . . . . . . . . . . .   7
     6.1.  REST  . . . . . . . . . . . . . . . . . . . . . . . . . .   7
       6.1.1.  Create a ticket . . . . . . . . . . . . . . . . . . .   8
       6.1.2.  Delete a ticket . . . . . . . . . . . . . . . . . . .   9
       6.1.3.  Get the keying material associated with a ticket  . .  10
   7.  Authenticating the KMS  . . . . . . . . . . . . . . . . . . .  11
   8.  Communication between the conference particpant and KMS . . .  11
   9.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .  11
   10. Security Considerations . . . . . . . . . . . . . . . . . . .  11
   11. Acknowledgements  . . . . . . . . . . . . . . . . . . . . . .  11
   12. References  . . . . . . . . . . . . . . . . . . . . . . . . .  12
     12.1.  Normative References . . . . . . . . . . . . . . . . . .  12
     12.2.  Informative References . . . . . . . . . . . . . . . . .  13
   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .  13

1.  Introduction

   Switched conferencing is an increasingly popular model for multimedia
   conferences with multiple participants using a combination of audio,
   video, text, and other media types.  With this model, real-time media
   flows from conference participants are not mixed, transcoded,
   transrated, recomposed, or otherwise manipulated on the conference
   server, as might be the case with a traditional multipoint control
   unit (MCU).  Instead, media flows transmitted by conference
   participants are simply forwarded by the switching conference server
   to each of the other participants, selectively forwarding flows based
   on voice activity detection or other criteria.  In some instances,
   the switching conference server may make limited modifications to RTP
   [RFC3550] headers, for example, but the actual media content (e.g.,
   voice or video data) is unaltered.

   An advantage of switched conferencing is that conference servers can
   be deployed on general-purpose computing hardware, as there is no
   need for the specialized hardware required to manipulate media flows
   that one finds on a traditional hardware MCU.  This, in turn, means
   that it is possible to deploy switching conference servers in
   virtualized environments, including private and public clouds.
   However, deploying conference resource in a public cloud environment
   may introduce a higher security risk.  Recognising the need to
   improve the way in which media confidentiality is ensured,



Reddy & Ravindranath    Expires December 26, 2015               [Page 2]

Internet-Draft         KMS for cloud conferencing              June 2015


   requirements for private media are specified in
   [I-D.jones-avtcore-private-media-reqts].  The solution framework
   wherein privacy is ensured for media is discussed in
   [I-D.jones-avtcore-private-media-framework].  Thus, there is a need
   to utilize an end-to-end encryption and authentication key (or pair
   of keys) and a hop-by-hop encryption and authentication key (or pair
   of keys).  The purpose for the hop-by-hop encryption key is to
   optionally encrypt RTP header extensions.  This dual-key model does
   necessitate a change in the way that keys are managed.  This document
   defines how a Key Management Service could be used for distributing
   cryptographic keys to the conference participants for encrypting and
   authenticating media content.

   This memo assumes the reader is familiar with Encrypted Key Transport
   (EKT) [I-D.ietf-avtcore-srtp-ekt].  This document also updates the
   Full EKT field.

2.  Notational Conventions

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in [RFC2119].

2.1.  Definitions and Notation

   KMS: Key Management Service.

   Ticket: A Kerberos like object used to identify and deliver keys over
   an untrusted network.

   Media content and Switching conference server are explained in
   [I-D.jones-avtcore-private-media-reqts].

3.  Design considerations

   A KMS can be used to propagate group keying material to authorized
   conference participants as and when needed and avoids the use of
   pair-wise keys.  A KMS based on symmetric keys has particular
   advantages, as symmetric key algorithms are generally much less
   computationally intensive than asymmetric key algorithms and the size
   of cipher-text generated using symmetric key algorithm is smaller
   compared to the cipher-text generated using asymmetric encryption
   algorithm.  Systems based on a KMS require a signaling mechanism that
   allows peers to retrieve other peers keying material.  The keying
   material should only be accessible to authorized listeners in the
   conference call so that they can authenticate and decrypt the media
   content.




Reddy & Ravindranath    Expires December 26, 2015               [Page 3]

Internet-Draft         KMS for cloud conferencing              June 2015


   A convenient way to implement such a signaling scheme is to use a
   ticket concept, similar to that in Kerberos [RFC4120] to identify and
   deliver keys.  The ticket can be forwarded in the Full EKT Field
   defined in [I-D.ietf-avtcore-srtp-ekt].  The speaker in the
   conference call requests a ticket and keying material from the KMS,
   conveys the identities of conference participants authorized to
   receive the keying material associated with the ticket to the KMS and
   sends the ticket in the Full EKT Field.  The participants in the
   conference call gets the ticket from Full EKT Field, requests KMS to
   provide the keying material associated with the ticket.  If the
   conference participant is authorized previously by the speaker then
   KMS returns the corresponding keying material.

   Other reasons for using EKT are discussed below:

   o  EKT based ROC synchronization is efficient over KMS based ROC
      synchronization in mobile and wireless environments, where members
      may go in and out of coverage and may miss a sequence number
      overrun.  EKT solves the problem in which the burst loss of the N
      initial SRTP packets can confuse an SRTP receiver, when the
      initial RTP sequence number is greater than or equal to 2^16 - N.

   o  EKT SPI allows the receiver to identify the cryptographic keys and
      parameters used by the source when new ticket is issued and
      packets with Short EKT Field are received before packets with Full
      EKT Field.

   KMS is already used in GDOI [RFC6407], MIKEY-TICKET [RFC6043], end-
   to-end encryption key management service
   [I-D.abiggs-saag-key-management-service] etc.

4.  Overview

   The participants do not share any credentials; instead, they trust a
   third party, the KMS, with which they have or can establish shared
   credentials.  These pre-established trust relations are used to
   establish a security association between participants in the
   conference.

   The speaker in the conference call requests a ticket and keying
   material from the KMS.  The request message also includes identities
   of the conference participants authorized to receive the keying
   material associated with the ticket.  Each conference participant is
   referenced using an identifier that is unique within an conferencing
   call.  If the speaker is authorized then KMS generates the encryption
   key (referred to as EKT key (key encrypting key) defined in
   [I-D.ietf-avtcore-srtp-ekt]), cipher suite and ticket, and returns
   them in a response message.  The ticket could be self-contained (key



Reddy & Ravindranath    Expires December 26, 2015               [Page 4]

Internet-Draft         KMS for cloud conferencing              June 2015


   encrypted in the ticket) or just a handle to some internal
   datastructure within the KMS.  The EKT cipher will either be
   negotiated between the speaker and KMS or determined by the KMS and
   conveyed to the speaker.

   The speaker in the conference call includes the ticket in the Full
   EKT Field.  The media content is protected and encrypted using the
   SRTP Master key signaled in the Full EKT Field.  The SRTP Master key
   is encrypted using the EKT key.  Conference participants receiving
   the media and Full EKT Field forward the ticket to the KMS and
   request the KMS to provide the keying material associated with the
   ticket and identity of the ticket issuer.  If the conference
   participant is authorized previously by the speaker and the ticket is
   valid then the KMS retrieves the EKT key, cipher suite associated
   with the ticket and identity of the ticket issuer, and conveys them
   to the conference participant.  (TBD: The other alternative technique
   is that KMS pushes the ticket, keying material associated with it and
   identity of the ticket issuer to conference participants authorized
   by the speaker using HTTP/2 server push).  If the identity of the
   ticket issuer matches that of a conference participant then
   validation is successful that the ticket is generated by a trusted
   source and the EKT Ciphertext in Full EKT Field will be decrypted
   using the EKT Key and EKT Cipher learned from the KMS.  The SRTP
   Master key in the Full EKT Field will be used to decrypt the media
   content.

   When participants leaves or join a conference, the Switching
   Conference Server is notified.  In reaction to that notification, the
   Switching Conference Server informs the other conference participants
   of the leave or join.  If participants receiving media join or leave
   the conference call then the speaker in the conference MUST change
   the EKT Key (but not too often exceeding recommendation in
   Section 10) by requesting a new ticket and new keying material from
   the KMS.  The request message from the speaker to KMS includes
   identities of the conference participants authorized to receive the
   keying material associated with the new ticket.  The new ticket will
   be conveyed in the Full EKT Field encrypted using the new EKT Key and
   media content will be integrity protected and encrypted using the new
   SRTP Master key conveyed in the Full EKT Field.  This mechanism
   ensures that even if the attacker gets access to the media packet
   prior to joining the conference call or after leaving the call, it
   cannot decrypt the EKT Cipher text and will not know the SRTP master
   key to decrypt the encrypted portion of the RTP packet.  For example
   in a conference call where several job candidates are dialing into a
   conference call, being interviewed, and leave, any job candidate does
   not hear other job candidate's interviews, or hear the discussion/
   introduction prior to they (themselves) join the conference call or
   the discussions after they leave.



Reddy & Ravindranath    Expires December 26, 2015               [Page 5]

Internet-Draft         KMS for cloud conferencing              June 2015


   Figure 1 shows an example of conference participant Alice requesting
   a new ticket and keying material from the KMS.  The request message
   includes the identifiers of conference participants Chris and Bob
   authorized to receive the keying material associated with the ticket.
   KMS returns the ticket and keying material in the response message.
   Alice includes the ticket in the Full EKT Field.  Chris forwards the
   ticket to the KMS and requests the KMS for keying material associated
   with the ticket (In Ticket resolve request message).  KMS validates
   the ticket, and checks if Chris is previously authorized by Alice.
   As Chris is authorized, keying material associated with the ticket is
   sent in the response message.  Similarly, Bob retrieves the keying
   material associated with the ticket from KMS.


+-----------+            +-------+     +------------+
| Alice     |            |  KMS  |     | Conference |     +-------+    +------+
| (Speaker) |            |       |     | server     |     | Chris |    | Bob  |
+----+------+            +----+--+     +------------+     +-------+    +--+---+
     |                      |             |                |              |
     |                      |             |                |              |
     | Ticket Request       |             |                |              |
     +--------------------->|             |                |              |
     |                      |             |                |              |
     | Ticket Response      |             |                |              |
     |<---------------------+             |                |              |
     |                      |             |                |              |
     | Ticket sent in       |             |                |              |
     | Full EKT Field       |             |                |              |
     +----------------------------------->|Ticket in Full EKT Field       |
     |                      |             +--------------->|              |
     |                      |             | Ticket in Full EKT Field      |
     |                      |             +------------------------------>|
     |                      |             | Ticket resolve |              |
     |                      |             |<---------------+              |
     |                      |             | Resolve response              |
     |                      |             +--------------->|              |
     |                      |             |                |              |
     |                      |             | Ticket resolve |              |
     |                      |             |<------------------------------+
     |                      |             | Resolve response              |
     |                      |             +------------------------------>|
     |                      |             |                |              |
     +                      +             +                +              +


                      Figure 1: Interaction with KMS





Reddy & Ravindranath    Expires December 26, 2015               [Page 6]

Internet-Draft         KMS for cloud conferencing              June 2015


5.  Full EKT Field format

   The existing EKT format [I-D.ietf-avtcore-srtp-ekt] is insufficient
   for the needs of Privacy-Ensured Cloud Conferencing, which needs to
   additionally convey Ticket to conference participants.  Thus, we
   extend the EKT format by adding two fields, Ticket Length and Ticket.

   The new EKT format is :

 Full_EKT_Field = Ticket Length || Ticket || EKT_Ciphertext || SPI || '1'

   Ticket Length:  Length of the Ticket.  The length of this field is
      fixed at 16 bits.

   Ticket:   A variable length Kerberos-like object used to identify and
      deliver keying material over an untrusted network to authorized
      conference participants.

   The rest of the fields in Full_EKT_Field are defined in
   [I-D.ietf-avtcore-srtp-ekt].

   TBD: Mechanism to negotiate cipher site and HMAC algorithm to encrypt
   and authenticate RTP packets.  Possible options are to either use the
   call signaling protocol or enhance EKT.

6.  KMS Protocol

6.1.  REST

   The conference participants and KMS MUST use REST API over HTTPS over
   TCP for generation, distribution of ticket and associated keying
   material.  HTTPS MUST be used for data confidentiality and integrity.
   For client authentication, the client and server MUST use one or both
   of (a) TLS client certificate or (b) HTTP authentication.  TBD: For
   interoperability we should choose one client authentication
   mechanism.

   To request a new ticket the conference participant makes an HTTP POST
   request to the KMS.  The response is returned with content-type
   "application/json", and consists of a JavaScript Object Notation
   (JSON) [RFC7159] object containing the ticket and keying material.
   JSON [RFC7159] payload is also used to convey the identities of
   conference participants authorized to receive the keying material
   associated with the ticket.







Reddy & Ravindranath    Expires December 26, 2015               [Page 7]

Internet-Draft         KMS for cloud conferencing              June 2015


6.1.1.  Create a ticket

   An HTTP POST request will be used to create a ticket on the KMS.

     POST {scheme}://{host}:{port}/.well-known/{version}/{URI suffix}
     Accept: application/json
     Content-type: application/json
     {
        "recipient" : string
      }

                     Figure 2: POST to create a ticket

   The header fields are described below.

   recipient:   Identities of conference participants authorized to
      receive the ticket and its format is explained in section 3.4.1 of
      [RFC5322].  (TBD: support for phone numbers)

   The following example shows POST request to create a ticket and
   authorizing conference participants chirs@ietf.org and bob@ietf.org
   to receive the keying material associated with the ticket.

     POST https://www.example.com/.well-known/v1/ticket
     Accept: application/json
     Content-type: application/json
      {
        "recipient": "chris@ietf.org, bob@ietf.org",
      }

                   Figure 3: Example to request a ticket

   TBD: Is there need to limit the length of recipient parameter value ?

   The KMS checks if the conference participant is authorized to request
   ticket creation and if authorized issues a ticket.  An successful
   response is illustrated below:














Reddy & Ravindranath    Expires December 26, 2015               [Page 8]

Internet-Draft         KMS for cloud conferencing              June 2015


      HTTP/1.1 200 OK
      Content-Type: application/json
      Cache-Control: no-store
     {
       "ticket": "string",
       "k": "string",
       "kid" :"string",
       "exp" : number,
       "enc" : "string"
      }

             Figure 4: Ticket and keying material in response

   The parameter "k" is defined in Section 6.4.1 of [RFC7518] and is
   equivalent to the EKT key, "enc" is defined in Section 4.1.2 of
   [RFC7516], "kid" is defined in Section 4.1.4 of [RFC7515] and is
   equivalent to the SPI, authenticated encryption algorithms are
   defined in section 5.1 of [RFC7518] and "exp" is defined in
   Section 4.1.4 of [RFC7519].

   TBD: Establishing EKT Master salt out of band needs to be discussed.

   An example of successful response is illustrated below:

    HTTP/1.1 200 OK
    Content-Type: application/json
    Cache-Control: no-store
   {
     "ticket":
     "U2FsdGVkX18qJK/kkWmRcnfHglrVTJSpS6yU32kmHmOrfGyI3m1gQj1jRPsr0uBb",
     "k": "v51N62OM65kyMvfTI08O",
     "kid" :"22BIjxU93h/IgwEb",
     "enc" : "A128KW"
    }

   Figure 5: Example of ticket and keying material conveyed in response

6.1.2.  Delete a ticket

   An HTTP DELETE request will be used to delete a ticket.  KMS must
   validate the DELETE request to only permit the conference participant
   who requested ticket creation to delete the ticket.









Reddy & Ravindranath    Expires December 26, 2015               [Page 9]

Internet-Draft         KMS for cloud conferencing              June 2015


     DELETE {scheme}://{host}:{port}/.well-known/{URI suffix}
     Accept: application/json
     Content-type: application/json
      {
        "ticket": string
      }

                   Figure 6: Request to Delete a ticket

6.1.3.  Get the keying material associated with a ticket

   An HTTP GET request will be used to retrieve the keying material
   associated with a ticket.

     GET {scheme}://{host}:{port}/.well-known/{URI suffix}
     Accept: application/json
     Content-type: application/json
     {
        "ticket": string
     }

    Figure 7: Request to retrieve the keying material associated with a
                                  ticket

   An example of successful response is illustrated below:

    HTTP/1.1 200 OK
    Content-Type: application/json
    Cache-Control: no-store
   {
     "ticket":
     "U2FsdGVkX18qJK/kkWmRcnfHglrVTJSpS6yU32kmHmOrfGyI3m1gQj1jRPsr0uBb",
     "k": "v51N62OM65kyMvfTI08O",
     "kid" :"22BIjxU93h/IgwEb",
     "enc" : "A128KW",
     "issuer" : "alice@ietf.org"
    }

         Figure 8: Example of keying material conveyed in response

   The new header field is described below.

   issuer:   Identity of the conference participant who requested ticket
      creation.







Reddy & Ravindranath    Expires December 26, 2015              [Page 10]

Internet-Draft         KMS for cloud conferencing              June 2015


7.  Authenticating the KMS

   The conference participant must know the KMS to use with the
   Switching conference server.  To authenticate the KMS, the conference
   participant needs to be configured with the names or IP addresses of
   the KMS.  The server certificate MUST contain DNS-ID (subjectAltName)
   as described in Section 4.1 of [RFC6125].  DNS names and IP addresses
   can be contained in the subjectAltName entries.  The client MUST use
   the rules and guidelines given in section 6 of [RFC6125] to validate
   the KMS identity.

   For KMS that don't have a certificate trust chain (e.g., because they
   are on a home network or a corporate network), the configured list of
   KMS's can contain the Subject Public Key Info (SPKI) fingerprint of
   the KMS (i.e., a simple whitelist of name and SPKI fingerprint).  The
   public key is used for the same reasons HTTP pinning [RFC7469] uses
   the public key.

8.  Communication between the conference particpant and KMS

   TBD: Should the conference participant directly communicate with the
   KMS or through the conference server acting as proxy ?
   (https://tools.ietf.org/html/draft-thomson-http-encryption-00 also
   discusses using KMS to encrypt the contents of a HTTP message).

9.  IANA Considerations

   TODO

10.  Security Considerations

   The interaction between the conference participants and the KMS
   requires Transport Layer Security (TLS) with a ciphersuite offering
   confidentiality protection and the guidance given in [RFC7525] must
   be followed to avoid attacks on TLS.  The EKT Key MUST NOT be
   transmitted in clear since this would completely destroy the security
   benefits of the proposed scheme.

   TBD: The generation of new ticket has to be rate-limited to handle
   participants frequently joining and leaving the conference call.

11.  Acknowledgements

   TODO







Reddy & Ravindranath    Expires December 26, 2015              [Page 11]

Internet-Draft         KMS for cloud conferencing              June 2015


12.  References

12.1.  Normative References

   [I-D.ietf-avtcore-srtp-ekt]
              Mattsson, J., McGrew, D., and D. Wing, "Encrypted Key
              Transport for Secure RTP", draft-ietf-avtcore-srtp-ekt-03
              (work in progress), October 2014.

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119, March 1997.

   [RFC3550]  Schulzrinne, H., Casner, S., Frederick, R., and V.
              Jacobson, "RTP: A Transport Protocol for Real-Time
              Applications", STD 64, RFC 3550, July 2003.

   [RFC4120]  Neuman, C., Yu, T., Hartman, S., and K. Raeburn, "The
              Kerberos Network Authentication Service (V5)", RFC 4120,
              July 2005.

   [RFC5322]  Resnick, P., Ed., "Internet Message Format", RFC 5322,
              October 2008.

   [RFC6043]  Mattsson, J. and T. Tian, "MIKEY-TICKET: Ticket-Based
              Modes of Key Distribution in Multimedia Internet KEYing
              (MIKEY)", RFC 6043, March 2011.

   [RFC6125]  Saint-Andre, P. and J. Hodges, "Representation and
              Verification of Domain-Based Application Service Identity
              within Internet Public Key Infrastructure Using X.509
              (PKIX) Certificates in the Context of Transport Layer
              Security (TLS)", RFC 6125, March 2011.

   [RFC6407]  Weis, B., Rowles, S., and T. Hardjono, "The Group Domain
              of Interpretation", RFC 6407, October 2011.

   [RFC7159]  Bray, T., "The JavaScript Object Notation (JSON) Data
              Interchange Format", RFC 7159, March 2014.

   [RFC7469]  Evans, C., Palmer, C., and R. Sleevi, "Public Key Pinning
              Extension for HTTP", RFC 7469, April 2015.

   [RFC7515]  Jones, M., Bradley, J., and N. Sakimura, "JSON Web
              Signature (JWS)", RFC 7515, May 2015.

   [RFC7516]  Jones, M. and J. Hildebrand, "JSON Web Encryption (JWE)",
              RFC 7516, May 2015.




Reddy & Ravindranath    Expires December 26, 2015              [Page 12]

Internet-Draft         KMS for cloud conferencing              June 2015


   [RFC7518]  Jones, M., "JSON Web Algorithms (JWA)", RFC 7518, May
              2015.

   [RFC7519]  Jones, M., Bradley, J., and N. Sakimura, "JSON Web Token
              (JWT)", RFC 7519, May 2015.

12.2.  Informative References

   [I-D.abiggs-saag-key-management-service]
              Biggs, A. and S. Cooley, "Key Management Service
              Architecture", draft-abiggs-saag-key-management-service-01
              (work in progress), May 2015.

   [I-D.jones-avtcore-private-media-framework]
              Jones, P., Ismail, N., and D. Benham, "A Solution
              Framework for Private Media in a Switched Conferencing",
              draft-jones-avtcore-private-media-framework-01 (work in
              progress), March 2015.

   [I-D.jones-avtcore-private-media-reqts]
              Jones, P., Ismail, N., Benham, D., Buckles, N., Mattsson,
              J., Cheng, Y., and R. Barnes, "Requirements for Private
              Media in a Switched Conferencing Environment", draft-
              jones-avtcore-private-media-reqts-01 (work in progress),
              March 2015.

   [RFC7525]  Sheffer, Y., Holz, R., and P. Saint-Andre,
              "Recommendations for Secure Use of Transport Layer
              Security (TLS) and Datagram Transport Layer Security
              (DTLS)", BCP 195, RFC 7525, May 2015.

Authors' Addresses

   Tirumaleswar Reddy
   Cisco Systems, Inc.
   Cessna Business Park
   Sarjapur-Marathahalli Outer Ring Road
   Bangalore, Karnataka  560103
   India

   Email: tireddy@cisco.com










Reddy & Ravindranath    Expires December 26, 2015              [Page 13]

Internet-Draft         KMS for cloud conferencing              June 2015


   Ram Mohan Ravindranath
   Cisco Systems, Inc.
   Cessna Business Park
   Sarjapur-Marathahalli Outer Ring Road
   Bangalore, Karnataka  560103
   India

   Email: rmohanr@cisco.com











































Reddy & Ravindranath    Expires December 26, 2015              [Page 14]
